```
+ ：增加；
- ：删除；
# ：修复；
* : 优化；
^ : 升级；
```
AAA: 多种登录限制（自定义中间件，session，装饰器，自带login_required，第三方库）；
AAA: 采用第三方AdminLTE；
AAA: DjangoForm；
AAA: 分页；
AAA: 增删改查；

2019-01-13：Django_XX平台
* : 优化编辑表需要带过来数据；

---------------------------------------------------------------------------------------------------
2019-01-11：Django_XX平台
+ ：增加确认密码；
* : 优化注册登录不区分大小写字符；

---------------------------------------------------------------------------------------------------
2019-01-05：Django_XX平台
* : 优化了基于 “中间件” 模式的登录验证（添加例如注册页面不需要验证）；
* : 优化用户名登录不区分大小写；
* : 引入bootstrap样式，增加可直接选择第几页;
+ ：增加分页显示第一页和最后一页；
# ：修复点击分页中“...”显示错误；
+ ：增加登录背景图片；
---------------------------------------------------------------------------------------------------
2019-01-01：Django项目新功能增加+前端优化
* ： 优化了登录(login)，注册(register)，数据展示(backend)等前端界面，引入bootstrap；

# ： 完善登录功能；
    + ： 增加session相关；
    + ： 增加注销功能（登录成功后页面右上角）；
    + ： 后端展示现在用户是否在线；

+ ： 后端页面表格数据增加，删除，修改功能；
    + : 删除数据基于数据库中的id来判断；
    + ： 编辑更新会匹配原列的id，一旦id输入不正确，提示用户出错；
    + ： 增加的新数据每列数据均不可以为空（为空会提示用户），成功添加则可以在页面最后一页查看到；

+ ： 基于装饰器的登录验证
    + ： session的保存时长为600s（可随便更改）；
    + ： 后端数据页面不可以直接访问需要先登录；

+ ：页面数据筛选展示（只做了内存列，例如点击32G内存，程序会自动筛选数据库中所有32G内存的机器并展示）；

---------------------------------------------------------------------------------------------------
2018-12-27：Django项目登录+注册实现
+ 程序在本地已经实现完全登录+注册功能；
+ 登录地址：http://127.0.0.1:8000/login/    （登录页可点击跳转到注册页面）
+ 注册地址：http://127.0.0.1:8000/register/ （注册页可点击跳转到登陆页面）


+ 登录功能：
    + 首次运行需要先注册用户；
    + 程序会自动判断，如果输入错的账号提示：用户不存在!，如果输入错误的密码提示：密码错误!
    + 如果非POST方式请求，程序会保留在页面不做任何处理；
    + 登录成功后会将数据库中所有的机器信息显示在主页上；

+ 注册功能：
    + 创建form类，当请求到来时，先匹配，匹配出正确和错误信息；
    + 用户可以使用任何字符作为用户名或者密码注册；
    + 注册成功会跳转到成功的欢迎页面（可以直接点击返回到登陆页面）；
    + 如果注册的用户已经存在，会提示：用户名已存在！

+ 修复功能：
    + 如果使用未注册的用户登录会报错：matching query does not exist！《使用try...except来异常处理》